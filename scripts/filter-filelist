#!/usr/bin/python

# Output a (binary, pathname) file mapping for the whole Debian ecosystem
# known to this script (currently Debian and Ubuntu), suitable for use in
# distromatch
# See: http://www.enricozini.org/2011/debian/distromatch/

__author__ = "Enrico Zini <enrico@debian.org>"
__license__ = """
    Copyright (C) 2011 Enrico Zini <enrico@debian.org>

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
"""

import sys
import os
import logging

# FIXME: I hate messing with sys.path
sys.path.append("..")
import dmatch

log = logging.getLogger(__name__)

VERSION="0.1"

if __name__ == "__main__":
    if os.isatty(sys.stderr.fileno()):
        logging.basicConfig(level=logging.INFO, stream=sys.stderr)
        #logging.basicConfig(level=logging.DEBUG, stream=sys.stderr)
    else:
        logging.basicConfig(level=logging.WARNING, stream=sys.stderr)

    count_read = 0
    count_matched = 0
    for line in sys.stdin:
        pkg, fname = line.strip().split(None, 1)

        # Select content
        for kind, matcher in dmatch.CONTENT_INFO.iteritems():
            m = matcher.match(fname)
            if m:
                print pkg, kind, m
                count_matched += 1
        count_read += 1
        if count_read % 100000 == 0:
            log.info("%s:%dk paths read, %d paths matched", url, count_read/1000, count_matched)
