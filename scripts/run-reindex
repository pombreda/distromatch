#!/bin/bash

set -ue

#if [ -t STDOUT ]
#then
#	progress() {
#		echo "$@"
#	}
#else
#	progress() {
#		:
#	}
#fi

# We are run with output redirected to a logfile, so we should always output
# our progess
progress() {
	echo "$@"
}

# Merge binsrc and interesting file lists
# First arg is the destination dir
# All other args are the dirs to merge into it
merge_datadirs() {
	TARGET="$1"
	shift

	for fname in binsrc interesting-files
	do
		(
			for dir in "$@"
			do
				if [ -f "$dir/$fname.gz" ]; then
					zcat "$dir/$fname.gz"
				else
					cat "$dir/$fname"
				fi
			done
		) | sort -u | gzip > $TARGET/$fname.gz.tmp
		mv $TARGET/$fname.gz.tmp $TARGET/$fname.gz
	done
}

# Do consolidation and reindexing

ROOT=$(readlink -f ${1:?"Usage: %0 rootdir"})
SCRIPTDIR=$(readlink -f $(dirname $0))
WEBDIR=/srv/dde.debian.net/web/exports/

echo "Rebuild merged distro indices"
for source in $ROOT/dist-*
do
	SUBS=$source-*
	# Check to see if it's a merged distro
	has_subs=
	for s in $SUBS
	do
		test -d $s && has_subs=true
	done
	test -z "$has_subs" && continue

	# Redo the merge
	echo "Merge $SUBS into $source"
	merge_datadirs $source $SUBS
done

echo "Archive the whole distromatch dataset"
cd $ROOT
tar -zcf $WEBDIR/distromatch-all.tar.gz.tmp dist-*/binsrc* dist-*/style dist-*/interesting-files*
mv $WEBDIR/distromatch-all.tar.gz.tmp $WEBDIR/distromatch-all.tar.gz
mkdir -p $WEBDIR/distromatch
tar -C $WEBDIR/distromatch -xf $WEBDIR/distromatch-all.tar.gz

echo "Reindex with distromatch"
$SCRIPTDIR/../distromatch --verbose --reindex --datadir=$ROOT

exit 0
