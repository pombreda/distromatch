#!/bin/bash

# distromatch - Match binary package names across distributions
#
# Copyright (C) 2011  Enrico Zini <enrico@enricozini.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -ue

#if [ -t STDOUT ]
#then
#	progress() {
#		echo "$@"
#	}
#else
#	progress() {
#		:
#	}
#fi

# We are run with output redirected to a logfile, so we should always output
# our progess
progress() {
	echo "$@"
}

# Update all distromatch sources in the given directory

ROOT=${1:?"Usage: %0 rootdir cachedir"}
SCRIPTDIR=$(dirname $0)
CACHEDIR=${2:-"./cache"}
export CACHEDIR

mkdir -p $CACHEDIR
touch -d "2 days ago" $CACHEDIR/rebuild-threshold

for source in $ROOT/dist-debian-* $ROOT/dist-ubuntu-*
do
	FN_UPTODATE=$source/last_update
	FN_CONTENTFILES=$source/contentfiles
	FN_INTFILES=$source/interesting-files.gz
	FN_BINSRC=$source/binsrc.gz

	# Skip if up to date
	test $FN_UPTODATE -nt $CACHEDIR/rebuild-threshold && continue

	# Generate interesting-files from Debian-style Content-* files
	if [ -f $FN_CONTENTFILES ]
	then
		progress "Updating file lists in $source..."
		if [ -x $FN_CONTENTFILES ]
		then
			$SCRIPTDIR/debian-mkfiles $($FN_CONTENTFILES) | gzip > $FN_INTFILES.tmp
		else
			$SCRIPTDIR/debian-mkfiles $(cat $FN_CONTENTFILES) | gzip > $FN_INTFILES.tmp
		fi
		mv $FN_INTFILES.tmp $FN_INTFILES
	fi

	name=$(basename $source)
	name=${name#dist-}

	# Try generating package lists for Debian distributions
	release=${name#debian-}
	if [ "$release" != "$name" ]
	then
		progress "Updating package lists in $source..."
		$SCRIPTDIR/debian-mkbinsrc debian $release | gzip > $FN_BINSRC.tmp
		mv $FN_BINSRC.tmp $FN_BINSRC
	fi

	# Try generating package lists for Ubuntu distributions
	release=${name#ubuntu-}
	if [ "$release" != "$name" ]
	then
		progress "Updating package lists in $source..."
		$SCRIPTDIR/debian-mkbinsrc ubuntu $release | gzip > $FN_BINSRC.tmp
		mv $FN_BINSRC.tmp $FN_BINSRC
	fi

	touch $FN_UPTODATE
done
