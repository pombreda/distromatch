#!/usr/bin/python

# Output a (binary, source) package mapping for the whole Debian ecosystem
# known to UDD, suitable for use in distromatch
# See: http://www.enricozini.org/2011/debian/distromatch/

__author__ = "Enrico Zini <enrico@debian.org>"
__license__ = """
    Copyright (C) 2011 Enrico Zini <enrico@debian.org>

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
"""

import psycopg2
import logging
import sys
import os

log = logging.getLogger(__name__)

if __name__ == "__main__":
    if os.isatty(sys.stdout.fileno()):
        logging.basicConfig(level=logging.INFO, stream=sys.stderr)
        #logging.basicConfig(level=logging.DEBUG, stream=sys.stderr)
    else:
        logging.basicConfig(level=logging.WARNING, stream=sys.stderr)

    try:
        db = psycopg2.connect(host="localhost",port=5441,user="guest",database="udd")
    except Exception, e:
        log.warn("Cannot connect to real UDD: %s", str(e))
        sys.exit(1)

    c = db.cursor()
    c.execute("select package, source from all_packages")
    res = {}
    for bin, src in c:
        res.setdefault(src, set()).add(bin)
    for src, bins in res.iteritems():
        for bin in bins:
            print bin, src
